server:
  port: 8082
  servlet:
    context-path: /api

spring:
  application:
    name: webdiario-event-hub

  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:eventhub}?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: ${DB_USERNAME:eventhub}
    password: ${DB_PASSWORD:eventhub123}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
  liquibase:
    enabled: false

  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:webdiario}
    password: ${RABBITMQ_PASSWORD:webdiario123}
    virtual-host: ${RABBITMQ_VIRTUAL_HOST:/}
    connection-timeout: ${RABBITMQ_CONNECTION_TIMEOUT:15000}
    listener:
      simple:
        acknowledge-mode: auto
        retry:
          enabled: true
          max-attempts: 3
          initial-interval: 1000
          max-interval: 10000
          multiplier: 2

# Event Hub Configuration
"event-hub":
  rabbitmq:
    exchanges:
      user-events: ${RABBITMQ_USER_EVENTS_EXCHANGE:webdiario.user.events}
      system-events: ${RABBITMQ_SYSTEM_EVENTS_EXCHANGE:webdiario.system.events}
      notification-events: ${RABBITMQ_NOTIFICATION_EVENTS_EXCHANGE:webdiario.notification.events}
    queues:
      user-events: ${RABBITMQ_USER_EVENTS_QUEUE:webdiario.user.events.queue}
      system-events: ${RABBITMQ_SYSTEM_EVENTS_QUEUE:webdiario.system.events.queue}
      notification-events: ${RABBITMQ_NOTIFICATION_EVENTS_QUEUE:webdiario.notification.events.queue}
      dead-letter: ${RABBITMQ_DEAD_LETTER_QUEUE:webdiario.dlq}
    routing-keys:
      user-created: ${RABBITMQ_USER_CREATED_ROUTING_KEY:user.created}
      user-updated: ${RABBITMQ_USER_UPDATED_ROUTING_KEY:user.updated}
      user-deleted: ${RABBITMQ_USER_DELETED_ROUTING_KEY:user.deleted}
      system-alert: ${RABBITMQ_SYSTEM_ALERT_ROUTING_KEY:system.alert}
      notification-sent: ${RABBITMQ_NOTIFICATION_SENT_ROUTING_KEY:notification.sent}

  batch-size: ${EVENT_HUB_BATCH_SIZE:100}
  retry-attempts: ${EVENT_HUB_RETRY_ATTEMPTS:3}
  retry-delay: ${EVENT_HUB_RETRY_DELAY:1000}
  event-retention-days: ${EVENT_HUB_EVENT_RETENTION_DAYS:90}
  max-event-size: ${EVENT_HUB_MAX_EVENT_SIZE:1048576}  # 1MB

# Logging Configuration
logging:
  level:
    "[com.webdiario.eventhub]": ${LOGGING_LEVEL_APP:DEBUG}
    "[org.springframework.amqp]": ${LOGGING_LEVEL_RABBITMQ:DEBUG}
    "[com.rabbitmq]": ${LOGGING_LEVEL_RABBITMQ:DEBUG}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
  packages-to-scan: com.webdiario.eventhub.controller

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,events
  endpoint:
    health:
      show-details: always
